{"version":3,"sources":["components/lw14.2/city/City.module.css","components/lw14.2/city/City.jsx","components/lw14.2/city/classCity.js","components/lw14.2/listCities.js","components/lw14.2/classCountry.js","components/lw14.2/citiesData.js","components/lw14.2/citiesData/harkiv.js","components/lw14.2/citiesData/kryvyiRih.js","components/lw14.2/CountryCities.jsx","App.js","reportWebVitals.js","index.js"],"names":["module","exports","CountryCities","props","className","s","emblem","src","alt","cityName","population","cityArea","yearOfFoundation","href","cityLink","City","this","listCities","name","language","capital","cities","map","city","index","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uIACAA,EAAOC,QAAU,CAAC,OAAS,uB,uJCeZC,EAbK,SAACC,GACjB,OACI,gCACI,qBAAKC,UAAWC,IAAEC,OAAQC,IAAKJ,EAAMG,OAAQE,IAAKL,EAAMM,WACxD,0HAAuBN,EAAMM,YAC7B,0HAAuBN,EAAMO,cAC7B,gHAAuBP,EAAMQ,YAC7B,qHAAuBR,EAAMS,oBAC7B,mBAAGC,KAAMV,EAAMW,SAAUN,IAAI,mFAA7B,sD,OCAGO,EAVX,WAAYN,EAAUG,EAAkBF,EAAYC,EAAUL,EAAQQ,GAAW,oBAC7EE,KAAKP,SAAWA,EAChBO,KAAKJ,iBAAmBA,EACxBI,KAAKN,WAAaA,EAClBM,KAAKL,SAAWA,EAChBK,KAAKV,OAASA,EACdU,KAAKF,SAAWA,GCMTG,ECXD,CACVC,KAAM,6CACNC,SAAU,CAAC,+DAAc,8CACzBC,QAAS,2BACTC,OCHU,CCDD,IAAIN,EACb,6CAAW,KAAM,QAAS,OAC1B,8HACA,4ECHY,IAAIA,EAChB,0DAAc,KAAM,OAAQ,IAC5B,oIACA,sDJFqBM,OAAOC,KAAI,SAACC,EAAMC,GAAP,OAC5B,cAAC,EAAD,CAEIf,SAAUc,EAAKd,SACfG,iBAAkBW,EAAKX,iBACvBF,WAAYa,EAAKb,WACjBC,SAAUY,EAAKZ,SACfL,OAAQiB,EAAKjB,OACbQ,SAAUS,EAAKT,UANRU,MKMJtB,EARK,WAChB,OACI,mCACKe,KCKEQ,MARf,WACE,OACE,qBAAKrB,UAAU,MAAf,SACE,cAAC,EAAD,OCMSsB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.a11ebba8.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"emblem\":\"City_emblem__1m0ui\"};","import React from 'react';\r\nimport s from './City.module.css';\r\n\r\nlet CountryCities = (props) => {   \r\n    return(\r\n        <div>\r\n            <img className={s.emblem} src={props.emblem} alt={props.cityName}/>\r\n            <p>Название города:   {props.cityName}</p>\r\n            <p>Кол-во населения:  {props.population}</p>\r\n            <p>Общая площадь:     {props.cityArea}</p>\r\n            <p>Дата основания:    {props.yearOfFoundation}</p>\r\n            <a href={props.cityLink} alt='Ссылка на город'>Ссылка</a>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CountryCities","class City {\r\n    constructor(cityName, yearOfFoundation, population, cityArea, emblem, cityLink) {\r\n        this.cityName = cityName;\r\n        this.yearOfFoundation = yearOfFoundation;\r\n        this.population = population;\r\n        this.cityArea = cityArea;\r\n        this.emblem = emblem;\r\n        this.cityLink = cityLink;\r\n    }\r\n};\r\n\r\nexport default City","import CityComponent from './city/City';\r\nimport country from './classCountry';\r\n\r\nlet listCities = country.cities.map((city, index) =>\r\n        <CityComponent\r\n            key = {index}\r\n            cityName={city.cityName}\r\n            yearOfFoundation={city.yearOfFoundation}\r\n            population={city.population}\r\n            cityArea={city.cityArea}\r\n            emblem={city.emblem} \r\n            cityLink={city.cityLink}/>)\r\n\r\nexport default listCities","import cities from './citiesData'\r\n\r\nlet country = {\r\n    name: \"Украина\",\r\n    language: [\"украинский\", \"русский\"],\r\n    capital: \"Киев\",\r\n    cities\r\n}\r\n\r\nexport default country","import harkiv from './citiesData/harkiv';\r\nimport kryvyiRih from './citiesData/kryvyiRih';\r\n\r\n let cities = [\r\n        // \"Припять\", \r\n        // \"Кривой Рог\", \r\n        // \"Чернобыль\", \r\n        // \"Киев\", \r\n        // \"Днепр\",\r\n        // \"Харьков\",\r\n        // <CountryCities cityName=\"Харьков\" yearOfFoundation=\"1654\" population=\"1443207\" cityArea=\"350,05\" emblem=\"https://upload.wikimedia.org/wikipedia/commons/thumb/7/71/Coat_of_arms_of_Kharkiv.svg/800px-Coat_of_arms_of_Kharkiv.svg.png\"/>,\r\n        // <CountryCities cityName=\"\" yearOfFoundation=\"\" population=\"\" cityArea=\"\" emblem=\"\"/>,\r\n        // new City('Харьков', 1654, 1443207, 350.05, 'https://upload.wikimedia.org/wikipedia/commons/thumb/7/71/Coat_of_arms_of_Kharkiv.svg/800px-Coat_of_arms_of_Kharkiv.svg.png'),\r\n        harkiv, kryvyiRih\r\n    ]\r\nexport default cities\r\n","import City from '../city/classCity';\r\n\r\nlet harkiv = new City(\r\n    'Харьков', 1654, 1443207, 350.05,\r\n    'https://upload.wikimedia.org/wikipedia/commons/thumb/7/71/Coat_of_arms_of_Kharkiv.svg/800px-Coat_of_arms_of_Kharkiv.svg.png',\r\n    'https://ru.wikipedia.org/wiki/%D0%A5%D0%B0%D1%80%D1%8C%D0%BA%D0%BE%D0%B2');\r\n    \r\n\r\nexport default harkiv","import City from '../city/classCity';\r\n\r\nlet kryvyiRih = new City(\r\n    'Кривой Рог', 1775, 619278, 430,\r\n    'https://upload.wikimedia.org/wikipedia/commons/thumb/7/75/Coat_of_Arms_of_Kryvyi_Rih.svg/800px-Coat_of_Arms_of_Kryvyi_Rih.svg.png',\r\n    'https://aleccross.github.io/hw-15-routes-react-/');\r\n\r\nexport default kryvyiRih","import React from 'react';\r\nimport listCities from './listCities';\r\n\r\nlet CountryCities = () => {\r\n    return (\r\n        <>  \r\n            {listCities}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default CountryCities","import './App.css';\nimport Cities from './components/lw14.2/CountryCities';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Cities />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}